package br.com.pinmyhelp.model;
// Generated 17/05/2018 15:02:51 by Hibernate Tools 4.3.1


import br.com.pinmyhelp.model.data.Model;
import br.com.pinmyhelp.model.types.GeoLocation;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.Embedded;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Help generated by hbm2java
 */
@javax.persistence.Entity
@Table(name="help",catalog="pinmyhelp")
public class Help  extends Model{

    private Claimant claimant;
    private Entity entity;
    private Voluntary voluntary;
    private Date solDateTime;
    private Date finDateTime;
    private GeoLocation location;
    private int helpStatus;
    private int helpType;
    private Integer calimantScore;
    private Integer helperScore;
    private List<Feedback> feedbacks = new ArrayList<>();

    public Help() {
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="claimant_id", nullable=false)
    public Claimant getClaimant() {
        return this.claimant;
    }
    
    public void setClaimant(Claimant claimant) {
        this.claimant = claimant;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="entity_id", nullable=false)
    public Entity getEntity() {
        return this.entity;
    }
    
    public void setEntity(Entity entity) {
        this.entity = entity;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="voluntary_id", nullable=false)
    public Voluntary getVoluntary() {
        return this.voluntary;
    }
    
    public void setVoluntary(Voluntary voluntary) {
        this.voluntary = voluntary;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="sol_date_time", nullable=false, length=19)
    public Date getSolDateTime() {
        return this.solDateTime;
    }
    
    public void setSolDateTime(Date solDateTime) {
        this.solDateTime = solDateTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fin_date_time", length=19)
    public Date getFinDateTime() {
        return this.finDateTime;
    }
    
    public void setFinDateTime(Date finDateTime) {
        this.finDateTime = finDateTime;
    }
    
   /**
     * @return the location
     */
    @Embedded
    @AttributeOverrides(value = {
        @AttributeOverride(name = "x", column = @Column(name = "x")),
        @AttributeOverride(name = "y", column = @Column(name = "y"))
    })
    public GeoLocation getLocation() {
        return location;
    }

    /**
     * @param location the location to set
     */
    public void setLocation(GeoLocation location) {
        this.location = location;
    } 
    
    @Column(name="help_status", nullable=false)
    public int getHelpStatus() {
        return this.helpStatus;
    }
    
    public void setHelpStatus(int helpStatus) {
        this.helpStatus = helpStatus;
    }

    
    @Column(name="help_type", nullable=false)
    public int getHelpType() {
        return this.helpType;
    }
    
    public void setHelpType(int helpType) {
        this.helpType = helpType;
    }

    
    @Column(name="calimant_score")
    public Integer getCalimantScore() {
        return this.calimantScore;
    }
    
    public void setCalimantScore(Integer calimantScore) {
        this.calimantScore = calimantScore;
    }

    
    @Column(name="helper_score")
    public Integer getHelperScore() {
        return this.helperScore;
    }
    
    public void setHelperScore(Integer helperScore) {
        this.helperScore = helperScore;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="help")
    public List<Feedback> getFeedbacks() {
        return this.feedbacks;
    }
    
    public void setFeedbacks(List<Feedback> feedbacks) {
        this.feedbacks = feedbacks;
    }

}